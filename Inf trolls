local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\24\14","\224\54\32\169\135"),function(v42) if (v9(v42,2)==(253 -172)) then local v100=0;while true do if (v100==0) then v30=v8(v11(v42,1,1));return "";end end else local v101=0;local v102;while true do if (v101==0) then v102=v10(v8(v42,16));if v30 then local v122=0;local v123;while true do if (v122==1) then return v123;end if (v122==0) then v123=v13(v102,v30);v30=nil;v122=1;end end else return v102;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v103=0;local v104;while true do if (v103==0) then v104=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v104-(v104%1) ;end end else local v105=0;local v106;while true do if (v105==0) then v106=(5 -3)^(v44-(1 -0)) ;return (((v43%(v106 + v106))>=v106) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (1==v46) then return v47;end end end local function v33() local v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v49 * 256) + v48 ;end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==1) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end end end local function v35() local v55=v34();local v56=v34();local v57=1;local v58=(v31(v56,1,51 -31 ) * (2^32)) + v55 ;local v59=v31(v56,21,31);local v60=((v31(v56,32)==1) and  -1) or 1 ;if (v59==(619 -(555 + 64))) then if (v58==0) then return v60 * 0 ;else v59=1;v57=0;end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end local function v36(v61) local v62=0;local v63;local v64;while true do if (v62==0) then v63=nil;if  not v61 then v61=v34();if (v61==0) then return "";end end v62=1;end if (2==v62) then v64={};for v113=1, #v63 do v64[v113]=v10(v9(v11(v63,v113,v113)));end v62=3;end if (v62==3) then return v14(v64);end if (1==v62) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=1,v69 do local v79=v32();local v80;if (v79==1) then v80=v32()~=0 ;elseif (v79==2) then v80=v35();elseif (v79==3) then v80=v36();end v70[v78]=v80;end v68[3]=v32();for v82=1,v34() do local v83=v32();if (v31(v83,1,1)==0) then local v109=0;local v110;local v111;local v112;while true do if (v109==1) then v112={v33(),v33(),nil,nil};if (v110==0) then v112[3]=v33();v112[572 -(367 + 201) ]=v33();elseif (v110==1) then v112[3]=v34();elseif (v110==2) then v112[3]=v34() -(2^16) ;elseif (v110==3) then v112[3]=v34() -(2^16) ;v112[4]=v33();end v109=2;end if (2==v109) then if (v31(v111,1,1)==1) then v112[2]=v70[v112[2]];end if (v31(v111,2,2)==1) then v112[3]=v70[v112[3]];end v109=3;end if (3==v109) then if (v31(v111,3,3)==1) then v112[4]=v70[v112[4]];end v65[v82]=v112;break;end if (v109==0) then v110=v31(v83,2,3);v111=v31(v83,4,6);v109=1;end end end end for v84=1,v34() do v66[v84-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v86=v75;local v87=v76;local v88=v77;local v89=v38;local v90=1;local v91= -(928 -(214 + 713));local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v107=0 + 0 ,v94 do if (v107>=v88) then v92[v107-v88 ]=v93[v107 + 1 ];else v96[v107]=v93[v107 + 1 ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do local v108=0;while true do if (v108==1) then if (v99<=47) then if (v99<=23) then if (v99<=11) then if (v99<=5) then if (v99<=2) then if (v99<=0) then v96[v98[2]]=v98[3];elseif (v99==(1 + 0)) then v96[v98[2]][v96[v98[3]]]=v96[v98[4]];else v96[v98[2]][v98[880 -(282 + 595) ]]=v98[4];end elseif (v99<=3) then v96[v98[2]]=v74[v98[3]];elseif (v99>(1641 -(1523 + 114))) then v96[v98[2]]=v73[v98[3]];else local v226=v98[2];v96[v226]=v96[v226]();end elseif (v99<=8) then if (v99<=6) then local v140=0;local v141;while true do if (v140==0) then v141=v98[2];do return v96[v141](v21(v96,v141 + 1 ,v98[3]));end break;end end elseif (v99>7) then v96[v98[2]]=v96[v98[3]];else local v230=v98[2];local v231,v232=v89(v96[v230](v21(v96,v230 + 1 ,v98[3])));v91=(v232 + v230) -1 ;local v233=0;for v337=v230,v91 do v233=v233 + 1 ;v96[v337]=v231[v233];end end elseif (v99<=9) then do return v96[v98[2]]();end elseif (v99==10) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end else local v234=0;local v235;while true do if (v234==0) then v235=v98[2];v96[v235](v21(v96,v235 + 1 + 0 ,v91));break;end end end elseif (v99<=17) then if (v99<=14) then if (v99<=12) then local v142=v98[2];local v143={};for v195=1, #v95 do local v196=0;local v197;while true do if (v196==0) then v197=v95[v195];for v389=0, #v197 do local v390=0;local v391;local v392;local v393;while true do if (0==v390) then v391=v197[v389];v392=v391[1];v390=1;end if (v390==1) then v393=v391[2];if ((v392==v96) and (v393>=v142)) then local v485=0;while true do if (v485==0) then v143[v393]=v392[v393];v391[1]=v143;break;end end end break;end end end break;end end end elseif (v99==13) then local v236=0;local v237;local v238;local v239;local v240;while true do if (v236==1) then v91=(v239 + v237) -1 ;v240=0;v236=2;end if (v236==2) then for v436=v237,v91 do local v437=0;while true do if (v437==0) then v240=v240 + 1 ;v96[v436]=v238[v240];break;end end end break;end if (v236==0) then v237=v98[2];v238,v239=v89(v96[v237](v96[v237 + (1 -0) ]));v236=1;end end else local v241=v98[2];v96[v241](v21(v96,v241 + 1 ,v98[3]));end elseif (v99<=15) then local v144=v98[2];local v145={};for v198=1, #v95 do local v199=0;local v200;while true do if (0==v199) then v200=v95[v198];for v395=0, #v200 do local v396=0;local v397;local v398;local v399;while true do if (v396==1) then v399=v397[2];if ((v398==v96) and (v399>=v144)) then v145[v399]=v398[v399];v397[1]=v145;end break;end if (v396==0) then v397=v200[v395];v398=v397[1];v396=1;end end end break;end end end elseif (v99>16) then local v242=v98[1067 -(68 + 997) ];local v243,v244=v89(v96[v242](v21(v96,v242 + 1 ,v91)));v91=(v244 + v242) -1 ;local v245=0;for v340=v242,v91 do v245=v245 + 1 ;v96[v340]=v243[v245];end else v96[v98[2]]=v96[v98[3]][v98[4]];end elseif (v99<=(1290 -(226 + 1044))) then if (v99<=18) then local v146=0;local v147;while true do if (v146==0) then v147=v98[8 -6 ];v96[v147]=v96[v147]();break;end end elseif (v99==(136 -(32 + 85))) then if (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]]=v98[3 + 0 ] + v96[v98[1 + 3 ]] ;end elseif (v99<=21) then if (v96[v98[2]]~=v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>22) then v96[v98[2]]=v96[v98[3]]%v98[4] ;elseif  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[960 -(892 + 65) ];end elseif (v99<=(83 -48)) then if (v99<=29) then if (v99<=26) then if (v99<=24) then v96[v98[3 -1 ]]=v98[3]~=0 ;elseif (v99==25) then for v345=v98[2],v98[4 -1 ] do v96[v345]=nil;end else local v251=0;local v252;while true do if (v251==0) then v252=v98[2];v96[v252]=v96[v252](v21(v96,v252 + (351 -(87 + 263)) ,v98[3]));break;end end end elseif (v99<=27) then if (v96[v98[182 -(67 + 113) ]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==(21 + 7)) then for v347=v98[2],v98[3] do v96[v347]=nil;end else v96[v98[2]][v98[3]]=v96[v98[4]];end elseif (v99<=32) then if (v99<=30) then local v149=v87[v98[7 -4 ]];local v150;local v151={};v150=v18({},{[v7("\242\247\194\121\254\200\208","\154\173\168\171\23")]=function(v201,v202) local v203=0;local v204;while true do if (v203==0) then v204=v151[v202];return v204[1 + 0 ][v204[7 -5 ]];end end end,[v7("\194\12\209\130\67\244\61\219\130\76","\52\157\83\191\231")]=function(v205,v206,v207) local v208=0;local v209;while true do if (v208==0) then v209=v151[v206];v209[1][v209[2]]=v207;break;end end end});for v210=1,v98[4] do local v211=0;local v212;while true do if (v211==0) then v90=v90 + 1 ;v212=v86[v90];v211=1;end if (v211==1) then if (v212[1]==(960 -(802 + 150))) then v151[v210-1 ]={v96,v212[3]};else v151[v210-1 ]={v73,v212[3]};end v95[ #v95 + 1 ]=v151;break;end end end v96[v98[2]]=v40(v149,v150,v74);elseif (v99==31) then local v256=0;local v257;while true do if (v256==0) then v257=v98[2];do return v21(v96,v257,v91);end break;end end else v96[v98[2]]=v96[v98[3 + 0 ]]%v96[v98[4]] ;end elseif (v99<=33) then local v153=0;local v154;while true do if (v153==0) then v154=v98[2];v96[v154](v96[v154 + 1 ]);break;end end elseif (v99==34) then if (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]]=v96[v98[3]];end elseif (v99<=41) then if (v99<=38) then if (v99<=36) then local v155=0;local v156;while true do if (v155==0) then v156=v98[2];v96[v156](v21(v96,v156 + 1 ,v91));break;end end elseif (v99>37) then v96[v98[2]]=v98[3]~=0 ;else v96[v98[2]]=v73[v98[3]];end elseif (v99<=39) then v96[v98[2]]=v74[v98[3]];elseif (v99>40) then if (v96[v98[2]]~=v98[1001 -(915 + 82) ]) then v90=v90 + 1 ;else v90=v98[3];end else local v264=0;local v265;while true do if (v264==0) then v265=v98[2];v96[v265](v21(v96,v265 + 1 ,v98[3]));break;end end end elseif (v99<=(124 -80)) then if (v99<=42) then local v159=v98[2];local v160,v161=v89(v96[v159](v21(v96,v159 + 1 ,v91)));v91=(v161 + v159) -1 ;local v162=0;for v213=v159,v91 do v162=v162 + 1 ;v96[v213]=v160[v162];end elseif (v99==43) then local v266=0;local v267;local v268;while true do if (v266==1) then v96[v267 + 1 ]=v268;v96[v267]=v268[v98[4]];break;end if (v266==0) then v267=v98[2];v268=v96[v98[3]];v266=1;end end else v96[v98[2]]=v98[3];end elseif (v99<=45) then local v163=0;local v164;local v165;while true do if (v163==1) then for v375=v164 + 1 ,v98[3 + 1 ] do v165=v165   .. v96[v375] ;end v96[v98[2 -0 ]]=v165;break;end if (v163==0) then v164=v98[3];v165=v96[v164];v163=1;end end elseif (v99>46) then local v271=0;local v272;local v273;while true do if (v271==1) then for v440=v272 + 1 ,v98[1191 -(1069 + 118) ] do v273=v273   .. v96[v440] ;end v96[v98[2]]=v273;break;end if (v271==0) then v272=v98[3];v273=v96[v272];v271=1;end end else v96[v98[4 -2 ]]=v96[v98[6 -3 ]] + v98[4] ;end elseif (v99<=71) then if (v99<=59) then if (v99<=53) then if (v99<=(9 + 41)) then if (v99<=48) then local v166=0;local v167;local v168;local v169;while true do if (1==v166) then v169=v98[4 -1 ];for v376=1 + 0 ,v169 do v168[v376]=v96[v167 + v376 ];end break;end if (v166==0) then v167=v98[2];v168=v96[v167];v166=1;end end elseif (v99>49) then local v275=0;local v276;while true do if (v275==0) then v276=v98[2];v96[v276]=v96[v276](v96[v276 + 1 ]);break;end end elseif (v96[v98[2]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=51) then local v170=0;local v171;local v172;local v173;while true do if (v170==0) then v171=v98[2];v172=v96[v171];v170=1;end if (v170==1) then v173=v98[3];for v380=1,v173 do v172[v380]=v96[v171 + v380 ];end break;end end elseif (v99>52) then if (v96[v98[2]]~=v96[v98[4]]) then v90=v90 + (792 -(368 + 423)) ;else v90=v98[3];end elseif v96[v98[2]] then v90=v90 + 1 ;else v90=v98[9 -6 ];end elseif (v99<=56) then if (v99<=54) then v96[v98[20 -(10 + 8) ]]=v96[v98[3]] + v98[4] ;elseif (v99==55) then local v277=0;local v278;local v279;local v280;while true do if (v277==1) then v280=v96[v278 + 2 ];if (v280>0) then if (v279>v96[v278 + 1 ]) then v90=v98[3];else v96[v278 + 3 ]=v279;end elseif (v279<v96[v278 + 1 ]) then v90=v98[3];else v96[v278 + 3 ]=v279;end break;end if (v277==0) then v278=v98[2];v279=v96[v278];v277=1;end end elseif v96[v98[2]] then v90=v90 + (3 -2) ;else v90=v98[3];end elseif (v99<=57) then local v175=v98[2];local v176,v177=v89(v96[v175](v21(v96,v175 + 1 ,v98[3])));v91=(v177 + v175) -1 ;local v178=0;for v216=v175,v91 do v178=v178 + 1 ;v96[v216]=v176[v178];end elseif (v99==(500 -(416 + 26))) then local v281=v98[2];v96[v281]=v96[v281](v21(v96,v281 + 1 ,v91));else local v283=0;local v284;while true do if (0==v283) then v284=v98[2];do return v96[v284](v21(v96,v284 + 1 ,v98[3]));end break;end end end elseif (v99<=65) then if (v99<=62) then if (v99<=(191 -131)) then v96[v98[2]]=v96[v98[3]][v98[4]];elseif (v99==61) then local v285=v98[2];v96[v285]=v96[v285](v96[v285 + 1 ]);else local v287=0;local v288;local v289;local v290;while true do if (v287==2) then for v441=1 + 0 ,v98[4] do v90=v90 + 1 ;local v442=v86[v90];if (v442[1]==8) then v290[v441-1 ]={v96,v442[3]};else v290[v441-1 ]={v73,v442[3]};end v95[ #v95 + 1 ]=v290;end v96[v98[2]]=v40(v288,v289,v74);break;end if (v287==0) then v288=v87[v98[3]];v289=nil;v287=1;end if (v287==1) then v290={};v289=v18({},{[v7("\202\146\44\35\236\116\237","\17\149\205\69\77\136")]=function(v444,v445) local v446=0;local v447;while true do if (0==v446) then v447=v290[v445];return v447[1][v447[2]];end end end,[v7("\152\248\245\82\101\219\142\163\194\227","\224\199\167\155\55\18\178")]=function(v448,v449,v450) local v451=v290[v449];v451[1][v451[2]]=v450;end});v287=2;end end end elseif (v99<=63) then local v181=v98[2];local v182=v96[v181];for v219=v181 + 1 ,v98[3] do v15(v182,v96[v219]);end elseif (v99==(502 -(145 + 293))) then v73[v98[3]]=v96[v98[2]];else v96[v98[432 -(44 + 386) ]][v96[v98[3]]]=v98[1490 -(998 + 488) ];end elseif (v99<=68) then if (v99<=66) then v96[v98[2]][v98[3]]=v96[v98[4]];elseif (v99>67) then v73[v98[3]]=v96[v98[2]];else local v297=0;local v298;local v299;while true do if (v297==0) then v298=v98[2];v299=v96[v298];v297=1;end if (v297==1) then for v453=v298 + 1 ,v91 do v15(v299,v96[v453]);end break;end end end elseif (v99<=69) then local v185=0;local v186;while true do if (v185==0) then v186=v98[2];v96[v186]=v96[v186](v21(v96,v186 + 1 ,v91));break;end end elseif (v99>70) then v96[v98[2]]=v98[3] + v96[v98[4]] ;else local v301=0;local v302;local v303;local v304;local v305;while true do if (v301==1) then v91=(v304 + v302) -1 ;v305=0;v301=2;end if (v301==2) then for v454=v302,v91 do v305=v305 + 1 ;v96[v454]=v303[v305];end break;end if (0==v301) then v302=v98[2];v303,v304=v89(v96[v302](v96[v302 + 1 ]));v301=1;end end end elseif (v99<=83) then if (v99<=77) then if (v99<=74) then if (v99<=72) then do return;end elseif (v99>73) then local v306=0;local v307;local v308;local v309;while true do if (0==v306) then v307=v98[2];v308=v96[v307 + 2 ];v306=1;end if (v306==1) then v309=v96[v307] + v308 ;v96[v307]=v309;v306=2;end if (v306==2) then if (v308>0) then if (v309<=v96[v307 + 1 ]) then local v480=0;while true do if (v480==0) then v90=v98[1 + 2 ];v96[v307 + 3 ]=v309;break;end end end elseif (v309>=v96[v307 + 1 ]) then v90=v98[3];v96[v307 + 3 ]=v309;end break;end end elseif  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=75) then local v187=0;local v188;while true do if (v187==0) then v188=v98[2 + 0 ];v96[v188](v96[v188 + 1 ]);break;end end elseif (v99>76) then v90=v98[775 -(201 + 571) ];else local v311=0;local v312;while true do if (v311==0) then v312=v98[2];do return v21(v96,v312,v91);end break;end end end elseif (v99<=80) then if (v99<=78) then if (v96[v98[2]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==79) then v96[v98[1140 -(116 + 1022) ]]= #v96[v98[3]];else v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;end elseif (v99<=(337 -256)) then v90=v98[3];elseif (v99==82) then do return v96[v98[2]]();end else local v316=0;local v317;local v318;while true do if (v316==0) then v317=v98[2];v318=v96[v98[3]];v316=1;end if (v316==1) then v96[v317 + 1 ]=v318;v96[v317]=v318[v98[4]];break;end end end elseif (v99<=(53 + 36)) then if (v99<=86) then if (v99<=84) then v96[v98[2]][v98[3]]=v98[4];elseif (v99==85) then v96[v98[7 -5 ]][v96[v98[3]]]=v96[v98[4]];else v96[v98[2]]={};end elseif (v99<=87) then v96[v98[2]][v96[v98[3]]]=v98[4];elseif (v99==88) then if (v96[v98[2]]~=v96[v98[4]]) then v90=v90 + (3 -2) ;else v90=v98[3];end else local v322=v98[2];local v323=v96[v322];local v324=v96[v322 + 2 ];if (v324>0) then if (v323>v96[v322 + 1 ]) then v90=v98[862 -(814 + 45) ];else v96[v322 + 3 ]=v323;end elseif (v323<v96[v322 + 1 ]) then v90=v98[7 -4 ];else v96[v322 + 1 + 2 ]=v323;end end elseif (v99<=92) then if (v99<=90) then v96[v98[1 + 1 ]]={};elseif (v99==91) then local v325=v98[887 -(261 + 624) ];local v326=v96[v325 + (3 -1) ];local v327=v96[v325] + v326 ;v96[v325]=v327;if (v326>0) then if (v327<=v96[v325 + 1 ]) then v90=v98[3];v96[v325 + 3 ]=v327;end elseif (v327>=v96[v325 + (1081 -(1020 + 60)) ]) then local v463=0;while true do if (v463==0) then v90=v98[3];v96[v325 + 3 ]=v327;break;end end end else do return;end end elseif (v99<=94) then if (v99>93) then v96[v98[2]]=v96[v98[3]]%v98[4] ;else local v330=0;local v331;local v332;while true do if (v330==0) then v331=v98[2];v332=v96[v331];v330=1;end if (v330==1) then for v464=v331 + (1424 -(630 + 793)) ,v91 do v15(v332,v96[v464]);end break;end end end elseif (v99==(321 -226)) then local v333=0;local v334;while true do if (v333==0) then v334=v98[2];v96[v334]=v96[v334](v21(v96,v334 + 1 ,v98[3]));break;end end else v96[v98[2]]= #v96[v98[3]];end v90=v90 + 1 ;break;end if (v108==0) then v98=v86[v90];v99=v98[1];v108=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
