local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\124\92","\44\82\114\44\47\59\74"),function(v42) if (v9(v42,2)==81) then v30=v8(v11(v42,1,1));return "";else local v99=v10(v8(v42,16));if v30 then local v109=0;local v110;while true do if (v109==1) then return v110;end if (0==v109) then v110=v13(v99,v30);v30=nil;v109=1;end end else return v99;end end end);local function v31(v43,v44,v45) if v45 then local v100=0;local v101;while true do if (v100==0) then v101=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-(2 -1))) + 1)) ;return v101-(v101%(2 -1)) ;end end else local v102=2^(v44-1) ;return (((v43%(v102 + v102))>=v102) and 1) or 0 ;end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (v47==0) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v47=1;end if (v47==1) then return (v49 * 256) + v48 ;end end end local function v34() local v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v53 * 16777216) + (v52 * 65536) + (v51 * 256) + v50 ;end local function v35() local v54=v34();local v55=v34();local v56=1;local v57=(v31(v55,1,20) * (2^(61 -29))) + v54 ;local v58=v31(v55,21,31);local v59=((v31(v55,32)==1) and  -1) or 1 ;if (v58==(0 -0)) then if (v57==0) then return v59 * 0 ;else local v111=0;while true do if (v111==0) then v58=1;v56=0;break;end end end elseif (v58==2047) then return ((v57==(619 -(555 + 64))) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end local function v36(v60) local v61=0;local v62;local v63;while true do if (v61==0) then v62=nil;if  not v60 then local v119=0;while true do if (v119==0) then v60=v34();if (v60==0) then return "";end break;end end end v61=1;end if (v61==3) then return v14(v63);end if (v61==2) then v63={};for v112=1, #v62 do v63[v112]=v10(v9(v11(v62,v112,v112)));end v61=3;end if (1==v61) then v62=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;v61=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v77=1,v68 do local v78=0;local v79;local v80;while true do if (v78==0) then v79=v32();v80=nil;v78=1;end if (1==v78) then if (v79==1) then v80=v32()~=0 ;elseif (v79==(570 -(367 + 201))) then v80=v35();elseif (v79==3) then v80=v36();end v69[v77]=v80;break;end end end v67[3]=v32();for v81=1,v34() do local v82=v32();if (v31(v82,1,928 -(214 + 713) )==0) then local v105=v31(v82,2,3);local v106=v31(v82,4,6);local v107={v33(),v33(),nil,nil};if (v105==0) then v107[3]=v33();v107[4]=v33();elseif (v105==1) then v107[880 -(282 + 595) ]=v34();elseif (v105==2) then v107[3]=v34() -(2^(1653 -(1523 + 114))) ;elseif (v105==3) then v107[3]=v34() -((2 + 0)^16) ;v107[4]=v33();end if (v31(v106,1,1 -0 )==1) then v107[2]=v69[v107[2]];end if (v31(v106,2,2)==(1066 -(68 + 997))) then v107[3]=v69[v107[3]];end if (v31(v106,1273 -(226 + 1044) ,3)==1) then v107[4]=v69[v107[4]];end v64[v81]=v107;end end for v83=1,v34() do v65[v83-1 ]=v39();end return v67;end local function v40(v71,v72,v73) local v74=v71[4 -3 ];local v75=v71[2];local v76=v71[3];return function(...) local v85=v74;local v86=v75;local v87=v76;local v88=v38;local v89=118 -(32 + 85) ;local v90= -1;local v91={};local v92={...};local v93=v20("#",...) -(1 + 0) ;local v94={};local v95={};for v103=0,v93 do if (v103>=v87) then v91[v103-v87 ]=v92[v103 + 1 ];else v95[v103]=v92[v103 + 1 ];end end local v96=(v93-v87) + 1 ;local v97;local v98;while true do local v104=0;while true do if (v104==0) then v97=v85[v89];v98=v97[1 + 0 ];v104=1;end if (v104==1) then if (v98<=52) then if (v98<=25) then if (v98<=12) then if (v98<=5) then if (v98<=2) then if (v98<=0) then if (v95[v97[2]]==v97[4]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98>1) then if  not v95[v97[959 -(892 + 65) ]] then v89=v89 + 1 ;else v89=v97[3];end else v95[v97[4 -2 ]]={};end elseif (v98<=3) then v95[v97[2]]=v97[3] + v95[v97[4]] ;elseif (v98>4) then v95[v97[2]][v95[v97[3]]]=v97[4];else v95[v97[2]]=v72[v97[3]];end elseif (v98<=(14 -6)) then if (v98<=(10 -4)) then if v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end elseif (v98==7) then local v181=v97[2];v95[v181]=v95[v181](v21(v95,v181 + 1 ,v97[3]));else local v183=0;local v184;local v185;while true do if (v183==0) then v184=v97[2];v185=v95[v97[3]];v183=1;end if (v183==1) then v95[v184 + 1 ]=v185;v95[v184]=v185[v97[4]];break;end end end elseif (v98<=10) then if (v98>9) then v95[v97[2]]=v95[v97[3]][v95[v97[4]]];else local v188=0;local v189;local v190;local v191;while true do if (1==v188) then v191=0;for v431=v189,v97[4] do local v432=0;while true do if (v432==0) then v191=v191 + 1 ;v95[v431]=v190[v191];break;end end end break;end if (v188==0) then v189=v97[352 -(87 + 263) ];v190={v95[v189](v95[v189 + 1 ])};v188=1;end end end elseif (v98==11) then local v192=v97[183 -(67 + 113) ];local v193=v95[v192];for v336=v192 + 1 ,v97[3 + 1 ] do v193=v193   .. v95[v336] ;end v95[v97[2]]=v193;else v95[v97[2]]=v95[v97[3]];end elseif (v98<=18) then if (v98<=15) then if (v98<=13) then local v135=v97[2];v95[v135](v21(v95,v135 + 1 ,v90));elseif (v98>14) then v95[v97[2]][v97[3]]=v95[v97[4]];else local v199=v97[2];local v200=v95[v199 + 2 ];local v201=v95[v199] + v200 ;v95[v199]=v201;if (v200>0) then if (v201<=v95[v199 + (2 -1) ]) then v89=v97[3];v95[v199 + 3 ]=v201;end elseif (v201>=v95[v199 + 1 + 0 ]) then v89=v97[3];v95[v199 + 3 ]=v201;end end elseif (v98<=16) then v95[v97[2]]=v95[v97[3]] * v97[4] ;elseif (v98>17) then local v203=0;local v204;local v205;local v206;local v207;while true do if (1==v203) then v90=(v206 + v204) -1 ;v207=0;v203=2;end if (v203==2) then for v437=v204,v90 do local v438=0;while true do if (v438==0) then v207=v207 + 1 ;v95[v437]=v205[v207];break;end end end break;end if (v203==0) then v204=v97[2];v205,v206=v88(v95[v204](v95[v204 + 1 ]));v203=1;end end else local v208=0;local v209;local v210;local v211;while true do if (v208==1) then v211=v95[v209 + 2 ];if (v211>0) then if (v210>v95[v209 + 1 ]) then v89=v97[11 -8 ];else v95[v209 + 3 ]=v210;end elseif (v210<v95[v209 + 1 ]) then v89=v97[3];else v95[v209 + 3 ]=v210;end break;end if (v208==0) then v209=v97[2];v210=v95[v209];v208=1;end end end elseif (v98<=21) then if (v98<=19) then local v137=0;local v138;local v139;while true do if (v137==0) then v138=v97[2];v139=v95[v138];v137=1;end if (1==v137) then for v357=v138 + 1 ,v90 do v15(v139,v95[v357]);end break;end end elseif (v98==20) then local v212=v97[2];v95[v212](v21(v95,v212 + 1 ,v90));elseif (v97[2]==v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=(975 -(802 + 150))) then if (v98==22) then local v213=0;local v214;while true do if (0==v213) then v214=v97[2];v95[v214]=v95[v214]();break;end end else for v339=v97[2],v97[3] do v95[v339]=nil;end end elseif (v98==24) then v95[v97[2]]();else local v215=0;local v216;while true do if (v215==0) then v216=v97[2];do return v95[v216](v21(v95,v216 + 1 ,v97[3]));end break;end end end elseif (v98<=38) then if (v98<=31) then if (v98<=28) then if (v98<=26) then local v140=v97[2];local v141=v95[v97[3]];v95[v140 + 1 ]=v141;v95[v140]=v141[v97[4]];elseif (v98>27) then local v217=0;local v218;while true do if (0==v217) then v218=v97[2];do return v21(v95,v218,v90);end break;end end else v95[v97[2]]={};end elseif (v98<=29) then if  not v95[v97[2]] then v89=v89 + (2 -1) ;else v89=v97[5 -2 ];end elseif (v98>30) then v89=v97[3];else local v222=v97[2];local v223,v224=v88(v95[v222](v95[v222 + 1 ]));v90=(v224 + v222) -1 ;local v225=0;for v341=v222,v90 do local v342=0;while true do if (0==v342) then v225=v225 + 1 ;v95[v341]=v223[v225];break;end end end end elseif (v98<=34) then if (v98<=32) then local v145=0;local v146;local v147;while true do if (v145==0) then v146=v97[3];v147=v95[v146];v145=1;end if (v145==1) then for v359=v146 + 1 ,v97[4] do v147=v147   .. v95[v359] ;end v95[v97[2]]=v147;break;end end elseif (v98==33) then local v226=0;local v227;while true do if (v226==0) then v227=v97[2];v95[v227]=v95[v227]();break;end end else v95[v97[2]]=v95[v97[3]] + v97[4] ;end elseif (v98<=36) then if (v98>35) then v95[v97[2]]=v95[v97[3]]%v95[v97[4]] ;else v95[v97[2]]= #v95[v97[3]];end elseif (v98==37) then v95[v97[2]][v97[3]]=v97[4];else local v233=v97[2];v95[v233]=v95[v233](v21(v95,v233 + 1 ,v97[3]));end elseif (v98<=45) then if (v98<=(30 + 11)) then if (v98<=39) then local v148=v97[2];do return v21(v95,v148,v148 + v97[3] );end elseif (v98==40) then v95[v97[2]]= #v95[v97[3]];else local v236=v97[2];local v237={};for v346=1, #v94 do local v347=v94[v346];for v360=0, #v347 do local v361=v347[v360];local v362=v361[1];local v363=v361[2];if ((v362==v95) and (v363>=v236)) then local v441=0;while true do if (v441==0) then v237[v363]=v362[v363];v361[998 -(915 + 82) ]=v237;break;end end end end end end elseif (v98<=43) then if (v98>42) then local v238=0;local v239;local v240;local v241;while true do if (v238==2) then if (v240>0) then if (v241<=v95[v239 + 1 ]) then local v484=0;while true do if (0==v484) then v89=v97[3];v95[v239 + 2 + 1 ]=v241;break;end end end elseif (v241>=v95[v239 + 1 ]) then local v485=0;while true do if (v485==0) then v89=v97[3 -0 ];v95[v239 + (1190 -(1069 + 118)) ]=v241;break;end end end break;end if (v238==0) then v239=v97[2];v240=v95[v239 + (5 -3) ];v238=1;end if (v238==1) then v241=v95[v239] + v240 ;v95[v239]=v241;v238=2;end end else v95[v97[2]][v95[v97[3]]]=v95[v97[4]];end elseif (v98>44) then v95[v97[2]]=v73[v97[6 -3 ]];else do return;end end elseif (v98<=48) then if (v98<=46) then if (v97[2]==v95[v97[8 -4 ]]) then v89=v89 + 1 + 0 ;else v89=v97[3];end elseif (v98>47) then v95[v97[2]][v97[3]]=v97[4];else local v249=0;local v250;local v251;while true do if (v249==1) then v95[v250 + 1 ]=v251;v95[v250]=v251[v95[v97[4]]];break;end if (v249==0) then v250=v97[2];v251=v95[v97[3]];v249=1;end end end elseif (v98<=50) then if (v98==49) then for v348=v97[2],v97[3] do v95[v348]=nil;end else v95[v97[3 -1 ]]=v95[v97[3]]%v95[v97[4]] ;end elseif (v98==51) then v95[v97[2]][v95[v97[3]]]=v95[v97[4]];else v95[v97[2]]=v72[v97[3]];end elseif (v98<=78) then if (v98<=65) then if (v98<=58) then if (v98<=55) then if (v98<=53) then v95[v97[2]][v95[v97[3]]]=v97[4];elseif (v98>54) then if (v95[v97[2]]==v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v95[v97[2 + 0 ]]==v97[4]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=56) then do return v95[v97[2]]();end elseif (v98>57) then v95[v97[793 -(368 + 423) ]]=v97[3];else v73[v97[9 -6 ]]=v95[v97[2]];end elseif (v98<=61) then if (v98<=59) then local v151=v97[2];local v152={v95[v151](v95[v151 + (19 -(10 + 8)) ])};local v153=0 -0 ;for v171=v151,v97[4] do v153=v153 + 1 ;v95[v171]=v152[v153];end elseif (v98>60) then local v261=v97[444 -(416 + 26) ];local v262=v95[v261];for v350=v261 + 1 ,v90 do v15(v262,v95[v350]);end else local v263=0;local v264;while true do if (v263==0) then v264=v97[6 -4 ];do return v21(v95,v264,v90);end break;end end end elseif (v98<=63) then if (v98>(27 + 35)) then v95[v97[2]]=v95[v97[3]] -v95[v97[4]] ;else local v266=0;local v267;local v268;local v269;while true do if (v266==1) then v269=v95[v267 + 2 ];if (v269>0) then if (v268>v95[v267 + 1 ]) then v89=v97[3];else v95[v267 + 3 ]=v268;end elseif (v268<v95[v267 + (439 -(145 + 293)) ]) then v89=v97[433 -(44 + 386) ];else v95[v267 + (1489 -(998 + 488)) ]=v268;end break;end if (v266==0) then v267=v97[3 -1 ];v268=v95[v267];v266=1;end end end elseif (v98>64) then v89=v97[3];else do return;end end elseif (v98<=71) then if (v98<=68) then if (v98<=66) then local v154=0;local v155;while true do if (v154==0) then v155=v97[2];v95[v155]=v95[v155](v21(v95,v155 + 1 ,v90));break;end end elseif (v98==67) then v95[v97[2]]=v95[v97[3]] -v95[v97[4]] ;else v95[v97[2]]=v95[v97[3]] + v97[4] ;end elseif (v98<=69) then do return v95[v97[2]]();end elseif (v98==70) then v95[v97[2]]=v95[v97[1 + 2 ]][v97[4 + 0 ]];else v95[v97[2]]=v95[v97[3]][v95[v97[4]]];end elseif (v98<=74) then if (v98<=72) then local v156=0;local v157;local v158;local v159;local v160;while true do if (2==v156) then for v366=v157,v90 do v160=v160 + 1 ;v95[v366]=v158[v160];end break;end if (v156==0) then v157=v97[774 -(201 + 571) ];v158,v159=v88(v95[v157](v21(v95,v157 + 1 ,v97[3])));v156=1;end if (1==v156) then v90=(v159 + v157) -(1139 -(116 + 1022)) ;v160=0;v156=2;end end elseif (v98>73) then v95[v97[2]]=v95[v97[3]]%v97[4] ;else v95[v97[2]]=v73[v97[3]];end elseif (v98<=76) then if (v98==(312 -237)) then local v280=v97[2];v95[v280](v21(v95,v280 + 1 ,v97[3]));else v95[v97[2 + 0 ]]=v97[3];end elseif (v98>77) then if (v95[v97[2]]==v95[v97[4]]) then v89=v89 + (3 -2) ;else v89=v97[10 -7 ];end else v95[v97[2]]=v97[3] + v95[v97[863 -(814 + 45) ]] ;end elseif (v98<=91) then if (v98<=84) then if (v98<=81) then if (v98<=79) then local v161=v97[2];do return v95[v161](v21(v95,v161 + 1 ,v97[3]));end elseif (v98==80) then do return v95[v97[4 -2 ]];end else local v284=0;local v285;local v286;while true do if (v284==0) then v285=v97[2];v286=v95[v97[3]];v284=1;end if (1==v284) then v95[v285 + 1 ]=v286;v95[v285]=v286[v95[v97[4]]];break;end end end elseif (v98<=82) then v95[v97[2]]=v95[v97[1 + 2 ]][v97[4]];elseif (v98==83) then local v287=v97[2];v95[v287](v21(v95,v287 + 1 ,v97[3]));else local v288=0;local v289;local v290;local v291;local v292;while true do if (v288==2) then for v442=v289,v90 do local v443=0;while true do if (0==v443) then v292=v292 + 1 ;v95[v442]=v290[v292];break;end end end break;end if (v288==1) then v90=(v291 + v289) -1 ;v292=0;v288=2;end if (v288==0) then v289=v97[2];v290,v291=v88(v95[v289](v21(v95,v289 + 1 ,v90)));v288=1;end end end elseif (v98<=87) then if (v98<=85) then v95[v97[2]]=v95[v97[3]]%v97[4] ;elseif (v98==86) then v95[v97[2]]=v95[v97[3]];else v95[v97[2]]();end elseif (v98<=89) then if (v98==88) then local v295=0;local v296;while true do if (v295==0) then v296=v97[2];v95[v296](v95[v296 + 1 ]);break;end end else local v297=0;local v298;local v299;while true do if (1==v297) then for v444=1, #v94 do local v445=0;local v446;while true do if (v445==0) then v446=v94[v444];for v499=0, #v446 do local v500=0;local v501;local v502;local v503;while true do if (v500==1) then v503=v501[887 -(261 + 624) ];if ((v502==v95) and (v503>=v298)) then local v511=0;while true do if (v511==0) then v299[v503]=v502[v503];v501[1]=v299;break;end end end break;end if (v500==0) then v501=v446[v499];v502=v501[1];v500=1;end end end break;end end end break;end if (v297==0) then v298=v97[1 + 1 ];v299={};v297=1;end end end elseif (v98>90) then local v300=v97[2];v95[v300]=v95[v300](v95[v300 + 1 ]);else local v302=0;local v303;local v304;local v305;local v306;while true do if (v302==1) then v90=(v305 + v303) -(1 -0) ;v306=0;v302=2;end if (v302==2) then for v447=v303,v90 do local v448=0;while true do if (v448==0) then v306=v306 + (1081 -(1020 + 60)) ;v95[v447]=v304[v306];break;end end end break;end if (0==v302) then v303=v97[2];v304,v305=v88(v95[v303](v21(v95,v303 + 1 ,v90)));v302=1;end end end elseif (v98<=98) then if (v98<=94) then if (v98<=92) then local v165=v97[2];v95[v165]=v95[v165](v95[v165 + 1 ]);elseif (v98==93) then local v307=v97[2];v95[v307]=v95[v307](v21(v95,v307 + 1 ,v90));else local v309=0;local v310;while true do if (v309==0) then v310=v97[2];v95[v310](v95[v310 + 1 ]);break;end end end elseif (v98<=96) then if (v98>95) then v95[v97[2]][v97[3]]=v95[v97[4]];else do return v95[v97[2]];end end elseif (v98==97) then v95[v97[2]]=v95[v97[1426 -(630 + 793) ]] * v97[4] ;else local v314=0;local v315;local v316;while true do if (1==v314) then for v449=v315 + 1 ,v97[3] do v15(v316,v95[v449]);end break;end if (0==v314) then v315=v97[2];v316=v95[v315];v314=1;end end end elseif (v98<=(342 -241)) then if (v98<=99) then local v167=0;local v168;local v169;local v170;while true do if (v167==2) then for v370=4 -3 ,v97[4] do local v371=0;local v372;while true do if (v371==0) then v89=v89 + 1 ;v372=v85[v89];v371=1;end if (v371==1) then if (v372[1 + 0 ]==12) then v170[v370-1 ]={v95,v372[3]};else v170[v370-1 ]={v72,v372[3]};end v94[ #v94 + 1 ]=v170;break;end end end v95[v97[6 -4 ]]=v40(v168,v169,v73);break;end if (v167==0) then v168=v86[v97[3]];v169=nil;v167=1;end if (v167==1) then v170={};v169=v18({},{[v7("\59\140\44\223\209\1\171","\181\100\211\69\177")]=function(v373,v374) local v375=v170[v374];return v375[1][v375[2]];end,[v7("\54\244\185\95\30\194\185\94\12\211","\58\105\171\215")]=function(v376,v377,v378) local v379=v170[v377];v379[1][v379[2]]=v378;end});v167=2;end end elseif (v98>(1847 -(760 + 987))) then local v317=0;local v318;local v319;local v320;while true do if (0==v317) then v318=v86[v97[3]];v319=nil;v317=1;end if (v317==1) then v320={};v319=v18({},{[v7("\202\214\136\76\229\124\237","\25\149\137\225\34\129")]=function(v450,v451) local v452=v320[v451];return v452[1914 -(1789 + 124) ][v452[2]];end,[v7("\197\208\62\249\195\128\60\254\234\40","\82\154\143\80\156\180\233")]=function(v453,v454,v455) local v456=v320[v454];v456[1][v456[2]]=v455;end});v317=2;end if (v317==2) then for v458=767 -(745 + 21) ,v97[4] do v89=v89 + 1 ;local v459=v85[v89];if (v459[1]==12) then v320[v458-(1 + 0) ]={v95,v459[3]};else v320[v458-1 ]={v72,v459[3]};end v94[ #v94 + 1 ]=v320;end v95[v97[2]]=v40(v318,v319,v73);break;end end else local v321=0;local v322;local v323;local v324;while true do if (v321==0) then v322=v97[2];v323=v95[v322];v321=1;end if (v321==1) then v324=v97[3];for v461=1,v324 do v323[v461]=v95[v322 + v461 ];end break;end end end elseif (v98<=103) then if (v98==102) then local v325=0;local v326;local v327;local v328;local v329;while true do if (v325==0) then v326=v97[2];v327,v328=v88(v95[v326](v21(v95,v326 + 1 ,v97[3])));v325=1;end if (v325==2) then for v464=v326,v90 do local v465=0;while true do if (v465==0) then v329=v329 + 1 ;v95[v464]=v327[v329];break;end end end break;end if (v325==1) then v90=(v328 + v326) -1 ;v329=0;v325=2;end end elseif v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end elseif (v98>104) then local v330=0;local v331;local v332;local v333;while true do if (v330==1) then v333=v97[3];for v466=1,v333 do v332[v466]=v95[v331 + v466 ];end break;end if (v330==0) then v331=v97[2];v332=v95[v331];v330=1;end end else v73[v97[3]]=v95[v97[2]];end v89=v89 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
